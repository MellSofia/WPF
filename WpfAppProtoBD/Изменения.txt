	Окно MainWindow ну или Logit_RegitWindow
	Изменения в прописании внешнего вида. При переносе внешнего вида, мне нужно было добавлять Grid и StackPanel. Grid чтобы была возможность красивее хранить это всё(табличками, несколько объектов на одной строчке), а StackPanel я использовала, как замену Panel.
	В MainWindow всё почти как было на WinForms, единственное что я добавтла это задала для panel_regist и panel_login Margin. А так делается тоже самое, что и раньше, визуальый вид кода немного изменился,так как тут другой чуть синтакисис.
	Затем, в Click у кнопок (button_regist_Click, button_login_Click, ButtonBack_Click), я не писала изменение Size, но так в принцепе ничего не изменилось.
	В button_sent_Click_1 зменения не значительные, по функционалу тоже самое, просто чуть другой синтакисис(Checked на IsChecked)
	В функции я убрала некоторые части, но суть осталась той же, потому что в WPF есть те же элементы, но также они имеют свои специфические методы и свойства. Ну а так же я сделала его просто более понятным и читабельным.
	В Button_enter_Click по сути ничего не изменилось, только DialogResult заменился на MessageBoxResult. В WinForms метод Show возвращает значение типа DialogResult, которое используется для определения, какую кнопку нажал пользователь.
В WPF метод Show возвращает значение типа MessageBoxResult, что также указывает на выбор пользователя, но с использованием другого перечисления.
	Окно EditUserWindow
	Во внешкнем виде добавила так же Grid, чтобы можно было разместить удобнее(табличкой/в строчки)
	Я добавила функцию IsInputValid, она проверяет пустые поля или нет, а так же я добавила функцию UpdateUserDetails, она как понятно из названия, обновляет данные. Тут по сути я просто разбила тот код что был, на несколько функций, это не только улучшило структуру и читаемость кода, но и позволило использовать более современные подходы к разработке интерфейсов.
	В остальном код не изменился, если что-то и меняла, то только потому, что WPF имеет свои специфические методы и свойства отличные от WinForms